/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import Business.Business;
import Business.Customer.Customer;
import Business.Order.OrderItem;
import Business.Supplier.Supplier;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajaygoel
 */
public class ManageOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrdersJPanel
     */
    public ManageOrdersJPanel() {
    }
    private JPanel userProcessContainer;
    
    private Business business;
    
    private Customer customer;
    
    

    ManageOrdersJPanel(JPanel userProcessContainer, Business business, Customer customer) {
                initComponents();
                this.userProcessContainer=userProcessContainer;
                
                this.customer=customer;
                this.business=business;
                
                populateTable();

    }
    
    public void populateTable(){
        
        DefaultTableModel dtm = (DefaultTableModel) OrdersJTbl.getModel();
        dtm.setRowCount(0);
        
        for(OrderItem oi: customer.getOrderList()){
            Object row[]= new Object[4];
            row[0]= oi;
            row[1] = oi.getQuantity();
            row[2] =oi.getSalesPrice();
            row[3] = oi.getOrderStatus();
            dtm.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrdersJTbl = new javax.swing.JTable();
        backJBtn = new javax.swing.JButton();
        viewOrderDetailsJBtn = new javax.swing.JButton();
        cancelOrderJBtn = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage Past Orders");

        OrdersJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Amount", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OrdersJTbl);

        backJBtn.setText("Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        viewOrderDetailsJBtn.setText("View Order Details");
        viewOrderDetailsJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderDetailsJBtnActionPerformed(evt);
            }
        });

        cancelOrderJBtn.setText("Cancel Order");
        cancelOrderJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOrderJBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(backJBtn)
                            .addGap(70, 70, 70)
                            .addComponent(viewOrderDetailsJBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelOrderJBtn))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJBtn)
                    .addComponent(viewOrderDetailsJBtn)
                    .addComponent(cancelOrderJBtn))
                .addContainerGap(375, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
              userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void viewOrderDetailsJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderDetailsJBtnActionPerformed
        // TODO add your handling code here:
        
                int SelectedRow = OrdersJTbl.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table first","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
            OrderItem oi = (OrderItem)OrdersJTbl.getValueAt(SelectedRow,0);
            ViewOrderDetailsJPanel vpanel = new ViewOrderDetailsJPanel(userProcessContainer,business, oi, customer);
            userProcessContainer.add("ViewOrderDetailsJPanel",vpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        
    }//GEN-LAST:event_viewOrderDetailsJBtnActionPerformed

    private void cancelOrderJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOrderJBtnActionPerformed
        // TODO add your handling code here:
        int SelectedRow = OrdersJTbl.getSelectedRow();
        if (SelectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            OrderItem oi = (OrderItem) OrdersJTbl.getValueAt(SelectedRow, 0);

            if (oi.getOrderStatus().equalsIgnoreCase("Delivered")) {
                JOptionPane.showMessageDialog(null, "Delivered item can not be canceled", "Warning", JOptionPane.WARNING_MESSAGE);
                return;

            } else if (oi.getOrderStatus().equalsIgnoreCase("Canceled")) {
                JOptionPane.showMessageDialog(null, "This order is already canceled", "Warning", JOptionPane.WARNING_MESSAGE);
                return;

            } else {
                for (Supplier s : business.getSupplierDirectory().getSupplierDirectory()) {
                    if (s.getSuppOrderList().containsKey(oi)) {
                        s.cancelOrder(oi);
                    }

                }

                JOptionPane.showMessageDialog(null, "This order has been successfully cancelled", "Information", JOptionPane.INFORMATION_MESSAGE);
                populateTable();

            }
        }


    }//GEN-LAST:event_cancelOrderJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrdersJTbl;
    private javax.swing.JButton backJBtn;
    private javax.swing.JButton cancelOrderJBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewOrderDetailsJBtn;
    // End of variables declaration//GEN-END:variables
}
